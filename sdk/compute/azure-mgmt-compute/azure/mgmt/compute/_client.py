# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from copy import deepcopy
from typing import Any, TYPE_CHECKING
from typing_extensions import Self

from azure.core.pipeline import policies
from azure.core.rest import HttpRequest, HttpResponse
from azure.mgmt.core import ARMPipelineClient
from azure.mgmt.core.policies import ARMAutoResourceProviderRegistrationPolicy

from ._configuration import ComputeClientConfiguration
from ._serialization import Deserializer, Serializer
from .operations import (
    AvailabilitySetsOperations,
    CapacityReservationGroupsOperations,
    CapacityReservationsOperations,
    DedicatedHostGroupsOperations,
    DedicatedHostsOperations,
    ImagesOperations,
    LogAnalyticsOperationsOperations,
    Operations,
    ProximityPlacementGroupsOperations,
    RestorePointCollectionsOperations,
    RestorePointsOperations,
    RollingUpgradeStatusInfosOperations,
    SshPublicKeyResourcesOperations,
    UsageOperationsOperations,
    VirtualMachineExtensionImageOpsOperations,
    VirtualMachineExtensionImageTypeOpsOperations,
    VirtualMachineExtensionImagesOperations,
    VirtualMachineExtensionsOperations,
    VirtualMachineImagesEdgeZoneOperationsOperations,
    VirtualMachineImagesOperationsOperations,
    VirtualMachineRunCommandOpsOperations,
    VirtualMachineRunCommandsOperations,
    VirtualMachineRunCommandsOperationsOperations,
    VirtualMachineScaleSetExtensionsOperations,
    VirtualMachineScaleSetVMExtensionsOperations,
    VirtualMachineScaleSetVMRunCommandOpsOperations,
    VirtualMachineScaleSetVMRunCommandsOperations,
    VirtualMachineScaleSetVMSOperations,
    VirtualMachineScaleSetVMSOpsOperations,
    VirtualMachineScaleSetsOperations,
    VirtualMachineScaleSetsOperationsOperations,
    VirtualMachineSizesOperationsOperations,
    VirtualMachinesOperations,
    VirtualMachinesOperationsOperations,
)

if TYPE_CHECKING:
    from azure.core.credentials import TokenCredential


class ComputeClient:  # pylint: disable=too-many-instance-attributes
    """Compute Client.

    :ivar operations: Operations operations
    :vartype operations: azure.mgmt.compute.operations.Operations
    :ivar virtual_machine_scale_sets: VirtualMachineScaleSetsOperations operations
    :vartype virtual_machine_scale_sets:
     azure.mgmt.compute.operations.VirtualMachineScaleSetsOperations
    :ivar rolling_upgrade_status_infos: RollingUpgradeStatusInfosOperations operations
    :vartype rolling_upgrade_status_infos:
     azure.mgmt.compute.operations.RollingUpgradeStatusInfosOperations
    :ivar virtual_machine_scale_set_extensions: VirtualMachineScaleSetExtensionsOperations
     operations
    :vartype virtual_machine_scale_set_extensions:
     azure.mgmt.compute.operations.VirtualMachineScaleSetExtensionsOperations
    :ivar virtual_machine_scale_set_vms_ops: VirtualMachineScaleSetVMSOpsOperations operations
    :vartype virtual_machine_scale_set_vms_ops:
     azure.mgmt.compute.operations.VirtualMachineScaleSetVMSOpsOperations
    :ivar virtual_machine_scale_set_vms: VirtualMachineScaleSetVMSOperations operations
    :vartype virtual_machine_scale_set_vms:
     azure.mgmt.compute.operations.VirtualMachineScaleSetVMSOperations
    :ivar virtual_machine_scale_set_vm_extensions: VirtualMachineScaleSetVMExtensionsOperations
     operations
    :vartype virtual_machine_scale_set_vm_extensions:
     azure.mgmt.compute.operations.VirtualMachineScaleSetVMExtensionsOperations
    :ivar virtual_machines: VirtualMachinesOperations operations
    :vartype virtual_machines: azure.mgmt.compute.operations.VirtualMachinesOperations
    :ivar virtual_machine_extensions: VirtualMachineExtensionsOperations operations
    :vartype virtual_machine_extensions:
     azure.mgmt.compute.operations.VirtualMachineExtensionsOperations
    :ivar virtual_machine_extension_image_ops: VirtualMachineExtensionImageOpsOperations operations
    :vartype virtual_machine_extension_image_ops:
     azure.mgmt.compute.operations.VirtualMachineExtensionImageOpsOperations
    :ivar virtual_machine_extension_image_type_ops: VirtualMachineExtensionImageTypeOpsOperations
     operations
    :vartype virtual_machine_extension_image_type_ops:
     azure.mgmt.compute.operations.VirtualMachineExtensionImageTypeOpsOperations
    :ivar virtual_machine_extension_images: VirtualMachineExtensionImagesOperations operations
    :vartype virtual_machine_extension_images:
     azure.mgmt.compute.operations.VirtualMachineExtensionImagesOperations
    :ivar availability_sets: AvailabilitySetsOperations operations
    :vartype availability_sets: azure.mgmt.compute.operations.AvailabilitySetsOperations
    :ivar proximity_placement_groups: ProximityPlacementGroupsOperations operations
    :vartype proximity_placement_groups:
     azure.mgmt.compute.operations.ProximityPlacementGroupsOperations
    :ivar dedicated_host_groups: DedicatedHostGroupsOperations operations
    :vartype dedicated_host_groups: azure.mgmt.compute.operations.DedicatedHostGroupsOperations
    :ivar dedicated_hosts: DedicatedHostsOperations operations
    :vartype dedicated_hosts: azure.mgmt.compute.operations.DedicatedHostsOperations
    :ivar ssh_public_key_resources: SshPublicKeyResourcesOperations operations
    :vartype ssh_public_key_resources:
     azure.mgmt.compute.operations.SshPublicKeyResourcesOperations
    :ivar images: ImagesOperations operations
    :vartype images: azure.mgmt.compute.operations.ImagesOperations
    :ivar restore_point_collections: RestorePointCollectionsOperations operations
    :vartype restore_point_collections:
     azure.mgmt.compute.operations.RestorePointCollectionsOperations
    :ivar restore_points: RestorePointsOperations operations
    :vartype restore_points: azure.mgmt.compute.operations.RestorePointsOperations
    :ivar capacity_reservation_groups: CapacityReservationGroupsOperations operations
    :vartype capacity_reservation_groups:
     azure.mgmt.compute.operations.CapacityReservationGroupsOperations
    :ivar capacity_reservations: CapacityReservationsOperations operations
    :vartype capacity_reservations: azure.mgmt.compute.operations.CapacityReservationsOperations
    :ivar virtual_machine_run_command_ops: VirtualMachineRunCommandOpsOperations operations
    :vartype virtual_machine_run_command_ops:
     azure.mgmt.compute.operations.VirtualMachineRunCommandOpsOperations
    :ivar virtual_machine_run_commands: VirtualMachineRunCommandsOperations operations
    :vartype virtual_machine_run_commands:
     azure.mgmt.compute.operations.VirtualMachineRunCommandsOperations
    :ivar virtual_machine_scale_set_vm_run_command_ops:
     VirtualMachineScaleSetVMRunCommandOpsOperations operations
    :vartype virtual_machine_scale_set_vm_run_command_ops:
     azure.mgmt.compute.operations.VirtualMachineScaleSetVMRunCommandOpsOperations
    :ivar virtual_machine_scale_set_vm_run_commands: VirtualMachineScaleSetVMRunCommandsOperations
     operations
    :vartype virtual_machine_scale_set_vm_run_commands:
     azure.mgmt.compute.operations.VirtualMachineScaleSetVMRunCommandsOperations
    :ivar usage_operations: UsageOperationsOperations operations
    :vartype usage_operations: azure.mgmt.compute.operations.UsageOperationsOperations
    :ivar virtual_machine_sizes_operations: VirtualMachineSizesOperationsOperations operations
    :vartype virtual_machine_sizes_operations:
     azure.mgmt.compute.operations.VirtualMachineSizesOperationsOperations
    :ivar virtual_machine_scale_sets_operations: VirtualMachineScaleSetsOperationsOperations
     operations
    :vartype virtual_machine_scale_sets_operations:
     azure.mgmt.compute.operations.VirtualMachineScaleSetsOperationsOperations
    :ivar virtual_machines_operations: VirtualMachinesOperationsOperations operations
    :vartype virtual_machines_operations:
     azure.mgmt.compute.operations.VirtualMachinesOperationsOperations
    :ivar virtual_machine_images_edge_zone_operations:
     VirtualMachineImagesEdgeZoneOperationsOperations operations
    :vartype virtual_machine_images_edge_zone_operations:
     azure.mgmt.compute.operations.VirtualMachineImagesEdgeZoneOperationsOperations
    :ivar virtual_machine_images_operations: VirtualMachineImagesOperationsOperations operations
    :vartype virtual_machine_images_operations:
     azure.mgmt.compute.operations.VirtualMachineImagesOperationsOperations
    :ivar log_analytics_operations: LogAnalyticsOperationsOperations operations
    :vartype log_analytics_operations:
     azure.mgmt.compute.operations.LogAnalyticsOperationsOperations
    :ivar virtual_machine_run_commands_operations: VirtualMachineRunCommandsOperationsOperations
     operations
    :vartype virtual_machine_run_commands_operations:
     azure.mgmt.compute.operations.VirtualMachineRunCommandsOperationsOperations
    :param credential: Credential used to authenticate requests to the service. Required.
    :type credential: ~azure.core.credentials.TokenCredential
    :param subscription_id: The ID of the target subscription. The value must be an UUID. Required.
    :type subscription_id: str
    :param base_url: Service host. Default value is "https://management.azure.com".
    :type base_url: str
    :keyword api_version: The API version to use for this operation. Default value is "2024-07-01".
     Note that overriding this default value may result in unsupported behavior.
    :paramtype api_version: str
    :keyword int polling_interval: Default waiting time between two polls for LRO operations if no
     Retry-After header is present.
    """

    def __init__(
        self,
        credential: "TokenCredential",
        subscription_id: str,
        base_url: str = "https://management.azure.com",
        **kwargs: Any
    ) -> None:
        _endpoint = "{endpoint}"
        self._config = ComputeClientConfiguration(
            credential=credential, subscription_id=subscription_id, base_url=base_url, **kwargs
        )
        _policies = kwargs.pop("policies", None)
        if _policies is None:
            _policies = [
                policies.RequestIdPolicy(**kwargs),
                self._config.headers_policy,
                self._config.user_agent_policy,
                self._config.proxy_policy,
                policies.ContentDecodePolicy(**kwargs),
                ARMAutoResourceProviderRegistrationPolicy(),
                self._config.redirect_policy,
                self._config.retry_policy,
                self._config.authentication_policy,
                self._config.custom_hook_policy,
                self._config.logging_policy,
                policies.DistributedTracingPolicy(**kwargs),
                policies.SensitiveHeaderCleanupPolicy(**kwargs) if self._config.redirect_policy else None,
                self._config.http_logging_policy,
            ]
        self._client: ARMPipelineClient = ARMPipelineClient(base_url=_endpoint, policies=_policies, **kwargs)

        self._serialize = Serializer()
        self._deserialize = Deserializer()
        self._serialize.client_side_validation = False
        self.operations = Operations(self._client, self._config, self._serialize, self._deserialize)
        self.virtual_machine_scale_sets = VirtualMachineScaleSetsOperations(
            self._client, self._config, self._serialize, self._deserialize
        )
        self.rolling_upgrade_status_infos = RollingUpgradeStatusInfosOperations(
            self._client, self._config, self._serialize, self._deserialize
        )
        self.virtual_machine_scale_set_extensions = VirtualMachineScaleSetExtensionsOperations(
            self._client, self._config, self._serialize, self._deserialize
        )
        self.virtual_machine_scale_set_vms_ops = VirtualMachineScaleSetVMSOpsOperations(
            self._client, self._config, self._serialize, self._deserialize
        )
        self.virtual_machine_scale_set_vms = VirtualMachineScaleSetVMSOperations(
            self._client, self._config, self._serialize, self._deserialize
        )
        self.virtual_machine_scale_set_vm_extensions = VirtualMachineScaleSetVMExtensionsOperations(
            self._client, self._config, self._serialize, self._deserialize
        )
        self.virtual_machines = VirtualMachinesOperations(
            self._client, self._config, self._serialize, self._deserialize
        )
        self.virtual_machine_extensions = VirtualMachineExtensionsOperations(
            self._client, self._config, self._serialize, self._deserialize
        )
        self.virtual_machine_extension_image_ops = VirtualMachineExtensionImageOpsOperations(
            self._client, self._config, self._serialize, self._deserialize
        )
        self.virtual_machine_extension_image_type_ops = VirtualMachineExtensionImageTypeOpsOperations(
            self._client, self._config, self._serialize, self._deserialize
        )
        self.virtual_machine_extension_images = VirtualMachineExtensionImagesOperations(
            self._client, self._config, self._serialize, self._deserialize
        )
        self.availability_sets = AvailabilitySetsOperations(
            self._client, self._config, self._serialize, self._deserialize
        )
        self.proximity_placement_groups = ProximityPlacementGroupsOperations(
            self._client, self._config, self._serialize, self._deserialize
        )
        self.dedicated_host_groups = DedicatedHostGroupsOperations(
            self._client, self._config, self._serialize, self._deserialize
        )
        self.dedicated_hosts = DedicatedHostsOperations(self._client, self._config, self._serialize, self._deserialize)
        self.ssh_public_key_resources = SshPublicKeyResourcesOperations(
            self._client, self._config, self._serialize, self._deserialize
        )
        self.images = ImagesOperations(self._client, self._config, self._serialize, self._deserialize)
        self.restore_point_collections = RestorePointCollectionsOperations(
            self._client, self._config, self._serialize, self._deserialize
        )
        self.restore_points = RestorePointsOperations(self._client, self._config, self._serialize, self._deserialize)
        self.capacity_reservation_groups = CapacityReservationGroupsOperations(
            self._client, self._config, self._serialize, self._deserialize
        )
        self.capacity_reservations = CapacityReservationsOperations(
            self._client, self._config, self._serialize, self._deserialize
        )
        self.virtual_machine_run_command_ops = VirtualMachineRunCommandOpsOperations(
            self._client, self._config, self._serialize, self._deserialize
        )
        self.virtual_machine_run_commands = VirtualMachineRunCommandsOperations(
            self._client, self._config, self._serialize, self._deserialize
        )
        self.virtual_machine_scale_set_vm_run_command_ops = VirtualMachineScaleSetVMRunCommandOpsOperations(
            self._client, self._config, self._serialize, self._deserialize
        )
        self.virtual_machine_scale_set_vm_run_commands = VirtualMachineScaleSetVMRunCommandsOperations(
            self._client, self._config, self._serialize, self._deserialize
        )
        self.usage_operations = UsageOperationsOperations(
            self._client, self._config, self._serialize, self._deserialize
        )
        self.virtual_machine_sizes_operations = VirtualMachineSizesOperationsOperations(
            self._client, self._config, self._serialize, self._deserialize
        )
        self.virtual_machine_scale_sets_operations = VirtualMachineScaleSetsOperationsOperations(
            self._client, self._config, self._serialize, self._deserialize
        )
        self.virtual_machines_operations = VirtualMachinesOperationsOperations(
            self._client, self._config, self._serialize, self._deserialize
        )
        self.virtual_machine_images_edge_zone_operations = VirtualMachineImagesEdgeZoneOperationsOperations(
            self._client, self._config, self._serialize, self._deserialize
        )
        self.virtual_machine_images_operations = VirtualMachineImagesOperationsOperations(
            self._client, self._config, self._serialize, self._deserialize
        )
        self.log_analytics_operations = LogAnalyticsOperationsOperations(
            self._client, self._config, self._serialize, self._deserialize
        )
        self.virtual_machine_run_commands_operations = VirtualMachineRunCommandsOperationsOperations(
            self._client, self._config, self._serialize, self._deserialize
        )

    def send_request(self, request: HttpRequest, *, stream: bool = False, **kwargs: Any) -> HttpResponse:
        """Runs the network request through the client's chained policies.

        >>> from azure.core.rest import HttpRequest
        >>> request = HttpRequest("GET", "https://www.example.org/")
        <HttpRequest [GET], url: 'https://www.example.org/'>
        >>> response = client.send_request(request)
        <HttpResponse: 200 OK>

        For more information on this code flow, see https://aka.ms/azsdk/dpcodegen/python/send_request

        :param request: The network request you want to make. Required.
        :type request: ~azure.core.rest.HttpRequest
        :keyword bool stream: Whether the response payload will be streamed. Defaults to False.
        :return: The response of your network call. Does not do error handling on your response.
        :rtype: ~azure.core.rest.HttpResponse
        """

        request_copy = deepcopy(request)
        path_format_arguments = {
            "endpoint": self._serialize.url("self._config.base_url", self._config.base_url, "str", skip_quote=True),
        }

        request_copy.url = self._client.format_url(request_copy.url, **path_format_arguments)
        return self._client.send_request(request_copy, stream=stream, **kwargs)  # type: ignore

    def close(self) -> None:
        self._client.close()

    def __enter__(self) -> Self:
        self._client.__enter__()
        return self

    def __exit__(self, *exc_details: Any) -> None:
        self._client.__exit__(*exc_details)
