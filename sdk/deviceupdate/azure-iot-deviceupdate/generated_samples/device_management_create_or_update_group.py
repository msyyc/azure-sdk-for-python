# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from azure.identity import DefaultAzureCredential
from azure.iot.deviceupdate import DeviceUpdateClient

"""
The sample just shows how to use the method and may not run successfully.
# PREREQUISITES
    pip install azure-identity
    pip install azure-iot-deviceupdate
# USAGE
    python device_management_create_or_update_group.py
"""
# x-ms-original-file: specification/deviceupdate/data-plane/Microsoft.DeviceUpdate/preview/2021-06-01-preview/examples/DeviceManagement_CreateOrUpdateGroup.json
def main():
    """
    Please set the values of the client ID, tenant ID and client secret of the AAD application as environment variables:
    AZURE_CLIENT_ID, AZURE_TENANT_ID, AZURE_CLIENT_SECRET.
    For more info about how to get the value, please see https://docs.microsoft.com/azure/active-directory/develop/howto-create-service-principal-portal
    """
    client = DeviceUpdateClient(
        endpoint="contoso.api.adu.microsoft.com",
        instance_id="blue",
        credential=DefaultAzureCredential(),
    )

    response = client.device_management.create_or_update_group(
        group_id="MyGroup",
        group={
            "createdDateTime": "2020-07-01T12:13:14.0000000Z",
            "deviceClassId": "9fd33c505d62e4c585b529ae0d643478d8da42c9",
            "groupId": "MyGroup",
            "groupType": "DeviceClassIdAndIoTHubTag",
            "tags": ["MyGroup"],
        },
    )
    print(response)


if __name__ == "__main__":
    main()
